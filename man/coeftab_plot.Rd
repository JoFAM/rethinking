% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coeftab_plot.R
\name{coeftab_plot}
\alias{coeftab_plot}
\alias{coeftab.plot}
\title{Plot method for \code{coeftab} objects}
\usage{
coeftab_plot(
  x,
  y,
  pars,
  col.ci = "black",
  by.model = FALSE,
  prob = 0.95,
  xlab = "Value",
  ...
)
}
\arguments{
\item{x}{Object produced by \code{coeftab}.}

\item{y}{\code{NULL} and unused. Required for compatibility with base \code{plot}.}

\item{pars}{Optional vector of parameter names or indexes to display. If missing, all parameters are shown.}

\item{col.ci}{Color to draw confidence intervals.}

\item{by.model}{Cluster estimates by model instead of by parameter (default).}

\item{prob}{Probability mass for confidence intervals. Default is 0.95}
}
\value{
\code{NULL} invisibly. This function is called for its side effect of creating a plot.
}
\description{
Plots coefficient tables produced by \code{\link{coeftab}},
clustered either by models or by parameter names.
}
\details{
This function plots the tabular output of \code{\link{coeftab}}, 
using a \code{\link{dotchart}}. By default, estimates are grouped
by parameter, with a row for each model. Model's without a 
parameter still appear as a row, but with no estimate. 
By setting \code{by.model=TRUE}, the dotchart will instead 
be grouped by model, with each row being a parameter. 

MAP estimates are displayed with percentile confidence 
(credible) intervals. Default is 95\% intervals. 
Use \code{prob} to change the interval mass.
}
\examples{

data(WaffleDivorce)
d <- WaffleDivorce

# standardize variables
d$D <- standardize( d$Divorce )
d$M <- standardize( d$Marriage )
d$A <- standardize( d$MedianAgeMarriage )

m5.1 <- quap(
    alist(
        D ~ dnorm( mu , sigma ) ,
        mu <- a + bA * A ,
        a ~ dnorm( 0 , 0.2 ) ,
        bA ~ dnorm( 0 , 0.5 ) ,
        sigma ~ dexp( 1 )
    ) , data = d )

m5.2 <- quap(
alist(
    D ~ dnorm( mu , sigma ) ,
    mu <- a + bM * M ,
    a ~ dnorm( 0 , 0.2 ) ,
    bM ~ dnorm( 0 , 0.5 ) ,
    sigma ~ dexp( 1 )
) , data = d )

plot(coeftab(m5.1,m5.2), par=c("bA","bM") )

}
